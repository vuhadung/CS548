package edu.stevens.cs548.clinic.service.representations;

import java.util.*;

import javax.xml.bind.annotation.*;
import javax.ws.rs.core.*;

import edu.stevens.cs548.clinic.service.web.rest.data.*;
import edu.stevens.cs548.clinic.service.web.rest.data.dap.*;
import edu.stevens.cs548.clinic.service.dto.*;

@XmlRootElement
public class ProviderRepresentation extends ProviderType {

	public List<LinkType> getLinksTreatments() {
		return this.getTreatments();
	}

	public ProviderRepresentation() {
		super();
	}

	public static LinkType getProviderLink(long id, UriInfo uriInfo) {
		UriBuilder ub = uriInfo.getBaseUriBuilder();
		ub.path("provider").path("{id}");
		String providerURI = ub.build(Long.toString(id)).toString();

		LinkType link = new LinkType();
		link.setUrl(providerURI);
		link.setRelation(Representation.RELATION_PROVIDER);
		link.setMediaType(Representation.MEDIA_TYPE);
		return link;
	}

	public ProviderRepresentation(ProviderDto dto, UriInfo uriInfo) {
		this.id = getProviderLink(dto.getProviderId(), uriInfo);
		this.providerId = dto.getNpi();
		this.name = dto.getName();
		if (dto.getProviderType() != null)
			this.specialization = dto.getProviderType();
		List<Long> treatments = dto.getTreatments();
		UriBuilder ub = uriInfo.getBaseUriBuilder();
		ub.path("treatment");

		List<LinkType> links = this.getTreatments();

		for (long t : treatments) {
			LinkType link = new LinkType();
			UriBuilder ubTreatment = ub.clone().path("{tid}");
			String teatmentURI = ubTreatment.build(Long.toString(t)).toString();

			link.setUrl(teatmentURI);
			link.setRelation(Representation.RELATION_TREATMENT);
			link.setMediaType(Representation.MEDIA_TYPE);
			links.add(link);
		}
	}
}